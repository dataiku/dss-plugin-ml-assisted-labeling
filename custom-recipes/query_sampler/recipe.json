// This file is the descriptor for the Custom code recipe dataset_fetching
{
    // Meta data for display purposes
    "meta" : {
        "label" : "Query sampler",
        "description" : "Sample queries following a given strategy",
        "icon" : "icon-filter"
    },

    "kind" : "PYTHON",
    
    "inputRoles" : [
        {
            "name": "saved_model",
            "label": "Saved model with predict_proba",
            "description": "Model used to get category prediction scores",
            "arity": "UNARY",
            "required": true,
            "acceptsDataset": false,
            "acceptsSavedModel": true
        },
         {
            "name": "unlabeled_samples",
            "label": "Unlabeled samples dataset",
            "description": "Dataset containing samples that we want to rank",
            "arity": "UNARY",
            "required": true,
            "acceptsDataset": true
        }
    ],

    "outputRoles" : [
        {
            "name": "queries",
            "label": "Queries dataset",
            "description": "Dataset in which the queries are stored",
            "arity": "UNARY",
            "required": true,
            "acceptsDataset": true
        }
    ],

    // The field "params" holds a list of all the params
    // for wich the user will be prompted for values in the Settings tab of the recipe.

    // The available parameter types are:
    // STRING, INT, DOUBLE, BOOLEAN, PASSWORD, SELECT, MAP, COLUMN, COLUMNS, TEXTAREA
    
    params = [
    
// This code aims at taking either saved model or proba columns
    
//        {
//            "name" : "input_type",
//            "label" : "Input type",
//            "type" : "SELECT",
//            "selectChoices" : [
//                { "value" : "model", "label" : "Saved Model"},
//                { "value" : "column", "label" : "Already computed probabilities"}
//            ]
//        },
//        {
//            "name" : "proba_columns",
//            "label" : "Class probability columns",
//            "type" : "COLUMNS",
//            "columnRole" : "unlabeled_samples",
//            "visibilityCondition" : "model.input_type == 'column'"
//        },
//        {
//            "name" : "saved_model",
//            "label" : "Saved Model",
//            "type" : "MODEL",
//            "visibilityCondition" : "model.input_type == 'model'"
//        },
        {
            "name" : "strategy",
            "label" : "Query strategy",
            "type" : "SELECT",
            "selectChoices" : [
                { "value" : "random", "label" : "Random sampling"},
                { "value" : "uncertainty", "label" : "Uncertainty sampling"},
                { "value" : "margin", "label" : "Margin sampling"},
                { "value" : "entropy", "label" : "Entropy based sampling"}
            ]
        }

// Code to allow grouping of annotations, disabled for now

//        {
//            "name" : "advanced",
//            "label" : "Advanced",
//            "type" : "BOOLEAN"
//        },
//        {
//            "name" : "group_by",
//            "label" : "Group annotations by (not functional yet)",
//            "type" : "COLUMN",
//            "columnRole" : "unlabeled_samples",
//            "visibilityCondition" : "model.advanced"
//        }
    ],
    
    // The field "resourceKeys" holds a list of keys that allows to limit the number
    // of concurrent executions and activities triggered by this recipe.
    //
    // Administrators can configure the limit per resource key in the Administration > Settings > Flow build
    // screen.

    "resourceKeys" : []

}
